import streamlit as st
import pandas as pd
import joblib
import pickle


# Load trained model
@st.cache_resource
def load_model():

    # Load the SVD model
    with open("Random_Forest_Model.pkl", "rb") as f: 
        model = pickle.load(f) 

    return model

model = load_model()

# Streamlit UI
st.title("Water Quality Predictor")
st.sidebar.header("Input Features")

# User Inputs
month = st.sidebar.selectbox("Select Month", [5, 6, 7, 8, 9, 10, 11])
hour = st.sidebar.selectbox("Select Hour", [12, 13, 14, 15, 16, 17])
location = st.sidebar.selectbox("Select Location", ["Puente Bilbao", "Puente Falbo", "Puente Irigoyen", "Arroyo Salguero", "Arroyo_Las Torres"]) 

# Water parameters input
pH = st.sidebar.slider("pH Level", 0.0, 14.0, 7.0)
turbidity = st.sidebar.slider("Turbidity (NTU)", 0.0, 100.0, 10.0)
dissolved_oxygen = st.sidebar.slider("Dissolved Oxygen (mg/L)", 0.0, 15.0, 7.0)
conductivity = st.sidebar.slider("Conductivity (ÂµS/cm)", 0.0, 5000.0, 1000.0)

# Encoding location
location_mapping = {"Puente Bilbao": 0, "Puente Falbo": 1, "Puente Irigoyen": 2, "Arroyo Salguero": 3, "Arroyo_Las Torres": 4}
location_encoded = location_mapping[location]

# Create input DataFrame
input_data = pd.DataFrame([[month, hour, location_encoded, pH, turbidity, dissolved_oxygen, conductivity]],
                          columns=["Month", "Hour", "Location", "pH", "Turbidity", "Dissolved Oxygen", "Conductivity"])

# Prediction
if st.sidebar.button("Predict Water Quality"):
    prediction = model.predict(input_data)[0]
    category_mapping = {0: "Safe", 1: "Moderate", 2: "Polluted", 3: "Highly Polluted"}
    result = category_mapping[prediction]
    
    st.subheader(f"Predicted Water Quality: {result}")
    
    # Additional visualization (optional)
    st.write("### Input Data Overview")
    st.dataframe(input_data)